-- SXOKEDSX contains the following views:
-- MV_P2R_Z09_DATA
-- MV_P2R_Z09_DATA_CONTENT
-- MV_P2R_Z09_DATA_CONTENT_AGGREGATED
-- MV_P2R_Z09_DATA_CONTENT_IN_COLUMNS


-- MV_P2R_Z09_DATA >
SELECT SCHEMA_NAME, VIEW_NAME, DEFINITION 
FROM SYS.VIEWS 
WHERE SCHEMA_NAME = 'SXOKEDSX' 
  AND VIEW_NAME = 'MV_P2R_Z09_DATA';

-- Creation Statement: MV_P2R_Z09_DATA
SELECT DISTINCT
/* Information on PTMS Z09 Classification
* Used Tables/Views:
* RXWSSTD."products.wsstd.dv.p2r::DV_INOB"
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP"
Tables exist in Databricks:
 - efdataonelh_prd.generaldiscovery_masterdata_r.p2r_inob_view
 - efdataonelh_prd.generaldiscovery_masterdata_r.p2r_ausp_view
*/
RXWSSTD."products.wsstd.dv.p2r::DV_INOB".OBJEK AS MATNR,
SUBSTRING (RXWSSTD."products.wsstd.dv.p2r::DV_INOB".OBJEK,11,18) "MATNR8",
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATINN,
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATZHL,
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATWRT,
to_char(RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATFLV) AS ATFLV
FROM
RXWSSTD."products.wsstd.dv.p2r::DV_INOB"
INNER JOIN RXWSSTD."products.wsstd.dv.p2r::DV_AUSP" ON 
(RXWSSTD."products.wsstd.dv.p2r::DV_INOB".KLART = RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".KLART)
AND (RXWSSTD."products.wsstd.dv.p2r::DV_INOB".CUOBJ = RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".OBJEK)
AND (RXWSSTD."products.wsstd.dv.p2r::DV_INOB".MANDT = RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".MANDT)
AND (RXWSSTD."products.wsstd.dv.p2r::DV_INOB".OPSYS = RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".OPSYS)
WHERE
(((RXWSSTD."products.wsstd.dv.p2r::DV_INOB".KLART)= 'Z09')
AND ((RXWSSTD."products.wsstd.dv.p2r::DV_INOB".OPSYS)= 'P2R')
AND ((RXWSSTD."products.wsstd.dv.p2r::DV_INOB".MANDT)= '508')
AND ((RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".OPTYPE)<> 'D')) ORDER BY
RXWSSTD."products.wsstd.dv.p2r::DV_INOB".OBJEK,
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATINN,
RXWSSTD."products.wsstd.dv.p2r::DV_AUSP".ATZHL



-- MV_P2R_Z09_DATA_CONTENT
SELECT SCHEMA_NAME, VIEW_NAME, DEFINITION 
FROM SYS.VIEWS 
WHERE SCHEMA_NAME = 'SXOKEDSX' 
  AND VIEW_NAME = 'MV_P2R_Z09_DATA_CONTENT';


-- Creation Statement: MV_P2R_Z09_DATA_CONTENT
SELECT DISTINCT
/* Information on PTMS Z09 Class and its Content 
* Used Tables/Views:
* MV_P2R_Z09_DATA
* MV_P2R_CAWNT
Table exists in Databricks:
-  MV_P2R_Z09_DATA Created above
 - efdataonelh_prd.generaldiscovery_masterdata_r.p2r_cawnt_view
* products.wsstd.dv.p2r::DV_CABNT
*/
LT_Z09_Daten.MATNR,
LT_Z09_Daten.MATNR8,
LT_Z09_Daten.ATINN,
ATINN_TXT.ATBEZ AS ATINN_TXT,
LT_Z09_Daten.ATZHL,
LT_Z09_Daten.ATWRT,
LT_Z09_Daten.ATFLV,	
--CASE WHEN to_CHAR(LT_Z09_Daten.ATWRT) = to_char('') THEN to_CHAR(LT_Z09_Daten.ATFLV)
CASE
WHEN LT_Z09_Daten.ATWRT = '' THEN LT_Z09_Daten.ATFLV
WHEN  LT_CAWNT.ATWTB = '' THEN LT_CAWNT.ATWTB
ELSE LT_Z09_Daten.ATWRT
END AS CONTENT, 	
CASE
WHEN LT_Z09_Daten.ATWRT = '' THEN LT_Z09_Daten.ATFLV
WHEN LT_Z09_Daten.ATWRT = LT_CAWNT.ATWTB_TXT THEN LT_CAWNT.ATWTB
WHEN LT_CAWNT.ATWTB = '' THEN LT_CAWNT.ATWTB
ELSE LT_Z09_Daten.ATWRT
END AS CONTENT_TXT
FROM
SXOKEDSX.MV_P2R_Z09_DATA LT_Z09_Daten
LEFT JOIN SXOKEDSX.MV_P2R_CAWNT LT_CAWNT ON LT_Z09_Daten.ATINN = LT_CAWNT.ATINN AND LT_Z09_Daten.ATWRT = LT_CAWNT.ATWTB_TXT
LEFT JOIN "RXWSSTD"."products.wsstd.dv.p2r::DV_CABNT" ATINN_TXT ON 	LT_Z09_DATEN.ATINN = ATINN_TXT.ATINN
WHERE ATINN_TXT.SPRAS = 'E' ORDER BY MATNR, ATINN


-- With all above we can create the final view:
SELECT SCHEMA_NAME, VIEW_NAME, DEFINITION 
FROM SYS.VIEWS 
WHERE SCHEMA_NAME = 'SXOKEDSX' 
AND VIEW_NAME = 'MV_P2R_Z09_DATA_CONTENT_IN_COLUMNS';


SELECT DISTINCT
/* Information on PTMS Z09 Class and its Content by Material  
 * Used Tables/Views:
 * MV_P2R_Z09_DATEN_CONTENT
 *  */
Z09Data.Matnr AS "MATNR", 
Z09Data.MATNR8 AS "MATNR8",
max(CASE WHEN (Z09Data.ATINN='0000028219') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_manufacturer_codetype",
max(CASE WHEN (Z09Data.ATINN='0000028220') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_manufacturer_code",
max(CASE WHEN (Z09Data.ATINN='0000028204') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Responsible_for_specification",
max(CASE WHEN (Z09Data.ATINN='0000028223') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_manufacturer_material",
max(CASE WHEN (Z09Data.ATINN='0000028210') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Layout_approved",
max(CASE WHEN (Z09Data.ATINN='0000028207') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Usage_Prefix",
max(CASE WHEN (Z09Data.ATINN='0000028386') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Number_of_pages",
max(CASE WHEN (Z09Data.ATINN='0000028228') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "ACF_Flag",
max(CASE WHEN (Z09Data.ATINN='0000028216') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Visible_Markings",
max(CASE WHEN (Z09Data.ATINN='0000028215') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Code",
max(CASE WHEN (Z09Data.ATINN='0000028211') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Colors",
max(CASE WHEN (Z09Data.ATINN='0000028212') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Number_colors_front",
max(CASE WHEN (Z09Data.ATINN='0000028222') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_manufacturer",
max(CASE WHEN (Z09Data.ATINN='0000028206') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Article_codetype",
max(CASE WHEN (Z09Data.ATINN='0000028205') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Article_code",
max(CASE WHEN (Z09Data.ATINN='0000028224') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_man_visible_markings",
max(CASE WHEN (Z09Data.ATINN='0000028221') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Contract_manufacturer_mt_index",
max(CASE WHEN (Z09Data.ATINN='0000028214') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Component_scrab_key",
max(CASE WHEN (Z09Data.ATINN='0000028225') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Remarks",
max(CASE WHEN (Z09Data.ATINN='0000028208') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Printed",
max(CASE WHEN (Z09Data.ATINN='0000028213') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Number_colors_back",
max(CASE WHEN (Z09Data.ATINN='0000028227') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Print_characteristics",
max(CASE WHEN (Z09Data.ATINN='0000028209') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Braille_text",
--max(CASE WHEN (Z09Data.ATINN='0000028226') THEN Z09DATa."CONTENT_TXT_AGG" ELSE NULL END) AS "Number of pages_2", --not needed anymore / not fillde
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='1' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Braille",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='2' THEN 'Yes' ELSE 'No' END) AS "PrintChar_FoilStamp",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='3' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Varnish",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='4' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Cryptoglyph",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='5' THEN 'Yes' ELSE 'No' END) AS "PrintChar_PseudoCryptoglyph",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='6' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Peak",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='7' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Embossing",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='8' THEN 'Yes' ELSE 'No' END) AS "PrintChar_CoinReactiveInk",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='9' THEN 'Yes' ELSE 'No' END) AS "PrintChar_IriodinLacquer",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='10' THEN 'Yes' ELSE 'No' END) AS "PrintChar_UVLacquer",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='11' THEN 'Yes' ELSE 'No' END) AS "PrintChar_PerlmuttLacquer",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='12' THEN 'Yes' ELSE 'No' END) AS "PrintChar_RichPaleGold",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='13' THEN 'Yes' ELSE 'No' END) AS "PrintChar_SilverHotFoil",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='14' THEN 'Yes' ELSE 'No' END) AS "PrintChar_Unvarnish",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='15' THEN 'Yes' ELSE 'No' END) AS "PrintChar_SecurityVarish",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='16' THEN 'Yes' ELSE 'No' END) AS "PrintChar_MattVarnish",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='17' THEN 'Yes' ELSE 'No' END) AS "PrintChar_CodingBySupplier",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='18' THEN 'Yes' ELSE 'No' END) AS "PrintChar_BKLogo",
max(CASE WHEN (Z09Data_CHAR.ATINN='0000028227') AND Z09Data_CHAR.CONTENT='19' THEN 'Yes' ELSE 'No' END) AS "PrintChar_S_DR"
FROM 
	--Subselect to aggregate the "CONTENT_TXT" based on the ATINN per Material Number
	(SELECT
	MATNR,
	MATNR8,
	String_agg(CONTENT_TXT,', ' ORDER BY CONTENT_TXT asc) AS "CONTENT_TXT_AGG",
	ATINN
	FROM
 	   SXOKEDSX.MV_P2R_Z09_DATA_CONTENT
	GROUP BY MATNR,MATNR8,ATINN) Z09DATA
	LEFT JOIN 
	--Get Print Characteristics by value (e.g. 1 = Braille)
		(SELECT
		MATNR,
		ATINN,
		CONTENT
		FROM
	 	   SXOKEDSX.MV_P2R_Z09_DATA_CONTENT
		GROUP BY MATNR,ATINN,CONTENT) Z09DATA_CHAR ON Z09DATA.MATNR = Z09Data_CHAR.MATNR
GROUP BY Z09Data.MATNR, Z09Data.MATNR8